---
- name: Install and configure PostgreSQL 16
  hosts: postgres_servers
  become: yes
  vars:
    postgresql_version: 16
    postgres_user: admin
    postgres_password: admin
    postgres_db: mydatabase

  tasks:
    - name: Update apt cache
      ansible.builtin.apt:
        update_cache: yes

    - name: Install required system packages
      ansible.builtin.apt:
        name:
          - python3
          - libpq-dev
        state: present

    - name: Install psycopg2
      ansible.builtin.apt:
        name: python3-psycopg2
        state: present

    - name: Ensure required directory for PostgreSQL repository key exists
      ansible.builtin.file:
        path: /usr/share/postgresql-common/pgdg
        state: directory
        mode: '0755'

    - name: Download the PostgreSQL repository key
      ansible.builtin.get_url:
        url: https://www.postgresql.org/media/keys/ACCC4CF8.asc
        dest: /usr/share/postgresql-common/pgdg/apt.postgresql.org.asc
        mode: '0644'

    - name: Add PostgreSQL APT repository
      ansible.builtin.command:
        cmd: >
          sh -c 'echo "deb [signed-by=/usr/share/postgresql-common/pgdg/apt.postgresql.org.asc] https://apt.postgresql.org/pub/repos/apt {{ ansible_distribution_release }}-pgdg main" > /etc/apt/sources.list.d/pgdg.list'
        creates: /etc/apt/sources.list.d/pgdg.list

    - name: Update apt cache again
      ansible.builtin.apt:
        update_cache: yes

    - name: Install PostgreSQL
      ansible.builtin.apt:
        name: postgresql
        state: present

    - name: Install PostgreSQL client and contrib packages
      ansible.builtin.apt:
        name:
          - postgresql-client
          - postgresql-contrib
        state: present

    - name: Ensure PostgreSQL service is enabled and started
      ansible.builtin.service:
        name: postgresql
        state: started
        enabled: yes

    - name: Configure pg_hba.conf for trust authentication during setup
      ansible.builtin.lineinfile:
        path: /etc/postgresql/{{ postgresql_version }}/main/pg_hba.conf
        regexp: '^host\s+all\s+all\s+127.0.0.1/32\s+'
        line: 'host    all             all             127.0.0.1/32            trust'
        validate: '/usr/lib/postgresql/{{ postgresql_version }}/bin/pg_ctl reload -D /etc/postgresql/{{ postgresql_version }}/main -l /var/log/postgresql/postgresql-{{ postgresql_version }}-main.log'

    - name: Ensure PostgreSQL listens on port 5432
      ansible.builtin.lineinfile:
        path: /etc/postgresql/{{ postgresql_version }}/main/postgresql.conf
        regexp: '^#port = 5432'
        line: 'port = 5432'
        validate: '/usr/lib/postgresql/{{ postgresql_version }}/bin/pg_ctl reload -D /etc/postgresql/{{ postgresql_version }}/main -l /var/log/postgresql/postgresql-{{ postgresql_version }}-main.log'

    - name: Restart PostgreSQL service to apply configuration changes
      ansible.builtin.service:
        name: postgresql
        state: restarted

    - name: Create PostgreSQL user
      become: yes
      become_user: postgres
      ansible.builtin.postgresql_user:
        name: "{{ postgres_user }}"
        password: "{{ postgres_password }}"
        state: present

    - name: Create PostgreSQL database
      become: yes
      become_user: postgres
      ansible.builtin.postgresql_db:
        name: "{{ postgres_db }}"
        owner: "{{ postgres_user }}"
        state: present

    - name: Grant privileges on database
      become: yes
      become_user: postgres
      ansible.builtin.postgresql_privs:
        db: "{{ postgres_db }}"
        role: "{{ postgres_user }}"
        privs: "ALL"
        type: "database"
        state: present

    - name: Wait for PostgreSQL to listen on port 5432
      ansible.builtin.wait_for:
        port: 5432
        delay: 10
        timeout: 300

    - name: Revert pg_hba.conf to md5 authentication
      ansible.builtin.lineinfile:
        path: /etc/postgresql/{{ postgresql_version }}/main/pg_hba.conf
        regexp: '^host\s+all\s+all\s+127.0.0.1/32\s+'
        line: 'host    all             all             127.0.0.1/32            md5'
        validate: '/usr/lib/postgresql/{{ postgresql_version }}/bin/pg_ctl reload -D /etc/postgresql/{{ postgresql_version }}/main -l /var/log/postgresql/postgresql-{{ postgresql_version }}-main.log'
